// <auto-generated />
using System;
using ChocolateFanClub.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChocolateFanClub.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20231219163028_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChocolateFanClub.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppUser");
                });

            modelBuilder.Entity("ChocolateFanClub.Models.Chocolate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChocolateImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("TastyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("TastyId");

                    b.ToTable("Chocolates");
                });

            modelBuilder.Entity("ChocolateFanClub.Models.Expensive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IsExpensive")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Expensive");
                });

            modelBuilder.Entity("ChocolateFanClub.Models.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ExpensiveId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShopImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("ExpensiveId");

                    b.ToTable("Shops");
                });

            modelBuilder.Entity("ChocolateFanClub.Models.Tasty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IsTasty")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tasty");
                });

            modelBuilder.Entity("ChocolateFanClub.Models.Chocolate", b =>
                {
                    b.HasOne("ChocolateFanClub.Models.AppUser", "AppUser")
                        .WithMany("Chocolates")
                        .HasForeignKey("AppUserId");

                    b.HasOne("ChocolateFanClub.Models.Tasty", "Tasty")
                        .WithMany()
                        .HasForeignKey("TastyId");

                    b.Navigation("AppUser");

                    b.Navigation("Tasty");
                });

            modelBuilder.Entity("ChocolateFanClub.Models.Shop", b =>
                {
                    b.HasOne("ChocolateFanClub.Models.AppUser", null)
                        .WithMany("Shops")
                        .HasForeignKey("AppUserId");

                    b.HasOne("ChocolateFanClub.Models.Expensive", "Expensive")
                        .WithMany()
                        .HasForeignKey("ExpensiveId");

                    b.Navigation("Expensive");
                });

            modelBuilder.Entity("ChocolateFanClub.Models.AppUser", b =>
                {
                    b.Navigation("Chocolates");

                    b.Navigation("Shops");
                });
#pragma warning restore 612, 618
        }
    }
}
